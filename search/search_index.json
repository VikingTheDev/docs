{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to the JS-Base v0 documentation. About JS-Base is a FiveM server base. Written from scratch by devpetrikov and SpaceTheDev in JavaScript the project aims to provide a lightweight platform with all the essentials for menu based servers. Installation Download or clone the resource from github and .... (some shit about using node or yarn to install dependencies) Links Github Repository SpaceTheDev devpetrikov cfx post (to come)","title":"Home"},{"location":"#welcome","text":"Welcome to the JS-Base v0 documentation.","title":"Welcome!"},{"location":"#about","text":"JS-Base is a FiveM server base. Written from scratch by devpetrikov and SpaceTheDev in JavaScript the project aims to provide a lightweight platform with all the essentials for menu based servers.","title":"About"},{"location":"#installation","text":"Download or clone the resource from github and .... (some shit about using node or yarn to install dependencies)","title":"Installation"},{"location":"#links","text":"Github Repository SpaceTheDev devpetrikov cfx post (to come)","title":"Links"},{"location":"discord/events/","text":"Notice This page is nowhere near finished and needs more work. Further documentation will be added in the next couple days. guildBanAdd Is triggered when a user is banned. guildBanRemove Is triggered when a user is unbanned. guildMemberUpdate Is triggered when a user's data is updated i.e. roles, displayname.","title":"Events"},{"location":"discord/events/#guildbanadd","text":"Is triggered when a user is banned.","title":"guildBanAdd"},{"location":"discord/events/#guildbanremove","text":"Is triggered when a user is unbanned.","title":"guildBanRemove"},{"location":"discord/events/#guildmemberupdate","text":"Is triggered when a user's data is updated i.e. roles, displayname.","title":"guildMemberUpdate"},{"location":"discord/exports/","text":"checkDiscordBan Checks if a user is banned in the discord specified in the config. Function checkDiscordBan(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and the reason for the ban/error messages Example code JS const user = \"*insert user id here*\" exports . jsbase . checkDiscordBan ({ user }, ( bool , reason ) => { console . log ( bool , reason ); }) LUA # To - come C# # To - come Output If the user is banned: true *Reason for ban* If the user is not banned: false User is not banned If an error occured: false *error message* getUserData Returns a object containing all the data for a user in your guild. Function getUserData(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and the data object/error message Example code JS const user = \"*insert user id here*\" exports . discord . getUserData ({ user }, ( completed , data ) => { console . log ( completed , data ) }) LUA # To - come C# # To - come Output If the user id is valid and the bot can successfully gather the data: true { \"id\" : \"*users id*\" , \"tag\" : \"username#0000\" , \"displayName\" : \"users displayname in guild\" , \"roles\" : [ \"role 1 id\" , \"role 2 id\" , \"role 3 id\" ] } If the user id is invalid or some other error occurs: false * error message ex . \"Cannot read property 'user' of undefined\" * getUserRoles Returns a object containing all the roles of a user in your guild. Function getUserData(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and an array with all the users roles/error messages Example code JS const user = \"*insert user id here*\" exports . discord . getUserRoles ({ user }, ( completed , data ) => { console . log ( completed , data ) }) LUA # To - come C# # To - come Output If the user id is valid and the bot can successfully gather the roles: ```js true [ \"role 1 id\", \"role 2 id\", \"role 3 id\" ] ``` If the user id is invalid or some other error occurs: ```js false *error message ex. \"Cannot read property 'user' of undefined\"* ``` sendLogMsg Helper used to send regular and embed messages to a channel, intended to be used for logging. Function sendLogMsg ( type , data , cb => {}) Parameter Type Optional Default Description type String none Used to define which type of message you want to send channel String none Used to define which channel the message should be sent to data Object/String none Object containing message data, content depends on type, see below for more info on this cb Callback Callback returning a bool and an object containing message info/any error messages Types regular Used for sending a regular message to a channel, takes a string as the data Example code JS const channel = \"*textchannel id*\" ; const message = \"Hello World!\" exports . discord . sendLogMsg ( \"regular\" , channel , message , cb => { console . log ( cb ) }) LUA #To-come C# #To-come Output If the channel is valid and the message is successfully delivered: { \"sent\": true, \"id\": \"*message id*\", \"channelId\": \"*id of textchannel*\" } If the channel is invalid or some other error occurs: { \"sent\": false, \"error\": \"ex. Channel not found\" } embed Used for sending a embed message to a channel, take a object as the data Example code JS const channel = \"806630404344774716\" ; const embedobj = { \"content\" : \"<@&767803636926906419>\" , \"embed\" : { author : { name : \"Name of author\" , iconURL : \"https://cdn.discordapp.com/attachments/562656258415525898/571040114277613598/officialssrplogo.png\" }, color : \"12745742\" , title : \"This is a title\" , description : \"This is a description\" , fields : [ { name : \"field1\" , value : \"field 1 text\" }, { name : \"field2\" , value : \"field 2 text\" } ], footer : { text : \"Test \u00a9 Petrikov\" , iconURL : \"https://cdn.discordapp.com/attachments/562656258415525898/571040114277613598/officialssrplogo.png\" }, timestamp : Date . now () } } exports . discord . sendLogMsg ( \"embed\" , channel , embedobj , cb => { console . log ( cb ) }) LUA # To - come C# # To - come Output: If the channel is valid and the message is successfully delivered: { \"sent\": true, \"id\": \"*message id*\", \"channelId\": \"*id of textchannel*\" } If the channel is invalid or some other error occurs: { \"sent\": false, \"error\": \"ex. Channel not found\" } user To come...","title":"Exports"},{"location":"discord/exports/#checkdiscordban","text":"Checks if a user is banned in the discord specified in the config.","title":"checkDiscordBan"},{"location":"discord/exports/#function","text":"checkDiscordBan(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and the reason for the ban/error messages","title":"Function"},{"location":"discord/exports/#example-code","text":"JS const user = \"*insert user id here*\" exports . jsbase . checkDiscordBan ({ user }, ( bool , reason ) => { console . log ( bool , reason ); }) LUA # To - come C# # To - come","title":"Example code"},{"location":"discord/exports/#output","text":"If the user is banned: true *Reason for ban* If the user is not banned: false User is not banned If an error occured: false *error message*","title":"Output"},{"location":"discord/exports/#getuserdata","text":"Returns a object containing all the data for a user in your guild.","title":"getUserData"},{"location":"discord/exports/#function_1","text":"getUserData(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and the data object/error message","title":"Function"},{"location":"discord/exports/#example-code_1","text":"JS const user = \"*insert user id here*\" exports . discord . getUserData ({ user }, ( completed , data ) => { console . log ( completed , data ) }) LUA # To - come C# # To - come","title":"Example code"},{"location":"discord/exports/#output_1","text":"If the user id is valid and the bot can successfully gather the data: true { \"id\" : \"*users id*\" , \"tag\" : \"username#0000\" , \"displayName\" : \"users displayname in guild\" , \"roles\" : [ \"role 1 id\" , \"role 2 id\" , \"role 3 id\" ] } If the user id is invalid or some other error occurs: false * error message ex . \"Cannot read property 'user' of undefined\" *","title":"Output"},{"location":"discord/exports/#getuserroles","text":"Returns a object containing all the roles of a user in your guild.","title":"getUserRoles"},{"location":"discord/exports/#function_2","text":"getUserData(data, cb => {}); Parameter Type Optional Default Description data Object none Object including the ID of the user you want to check, and an optional guild ID cb Callback Callback returning a bool and an array with all the users roles/error messages","title":"Function"},{"location":"discord/exports/#example-code_2","text":"JS const user = \"*insert user id here*\" exports . discord . getUserRoles ({ user }, ( completed , data ) => { console . log ( completed , data ) }) LUA # To - come C# # To - come","title":"Example code"},{"location":"discord/exports/#output_2","text":"If the user id is valid and the bot can successfully gather the roles: ```js true [ \"role 1 id\", \"role 2 id\", \"role 3 id\" ] ``` If the user id is invalid or some other error occurs: ```js false *error message ex. \"Cannot read property 'user' of undefined\"* ```","title":"Output"},{"location":"discord/exports/#sendlogmsg","text":"Helper used to send regular and embed messages to a channel, intended to be used for logging.","title":"sendLogMsg"},{"location":"discord/exports/#function_3","text":"sendLogMsg ( type , data , cb => {}) Parameter Type Optional Default Description type String none Used to define which type of message you want to send channel String none Used to define which channel the message should be sent to data Object/String none Object containing message data, content depends on type, see below for more info on this cb Callback Callback returning a bool and an object containing message info/any error messages","title":"Function"},{"location":"discord/exports/#types","text":"","title":"Types"},{"location":"discord/exports/#regular","text":"Used for sending a regular message to a channel, takes a string as the data Example code JS const channel = \"*textchannel id*\" ; const message = \"Hello World!\" exports . discord . sendLogMsg ( \"regular\" , channel , message , cb => { console . log ( cb ) }) LUA #To-come C# #To-come Output If the channel is valid and the message is successfully delivered: { \"sent\": true, \"id\": \"*message id*\", \"channelId\": \"*id of textchannel*\" } If the channel is invalid or some other error occurs: { \"sent\": false, \"error\": \"ex. Channel not found\" }","title":"regular"},{"location":"discord/exports/#embed","text":"Used for sending a embed message to a channel, take a object as the data Example code JS const channel = \"806630404344774716\" ; const embedobj = { \"content\" : \"<@&767803636926906419>\" , \"embed\" : { author : { name : \"Name of author\" , iconURL : \"https://cdn.discordapp.com/attachments/562656258415525898/571040114277613598/officialssrplogo.png\" }, color : \"12745742\" , title : \"This is a title\" , description : \"This is a description\" , fields : [ { name : \"field1\" , value : \"field 1 text\" }, { name : \"field2\" , value : \"field 2 text\" } ], footer : { text : \"Test \u00a9 Petrikov\" , iconURL : \"https://cdn.discordapp.com/attachments/562656258415525898/571040114277613598/officialssrplogo.png\" }, timestamp : Date . now () } } exports . discord . sendLogMsg ( \"embed\" , channel , embedobj , cb => { console . log ( cb ) }) LUA # To - come C# # To - come Output: If the channel is valid and the message is successfully delivered: { \"sent\": true, \"id\": \"*message id*\", \"channelId\": \"*id of textchannel*\" } If the channel is invalid or some other error occurs: { \"sent\": false, \"error\": \"ex. Channel not found\" }","title":"embed"},{"location":"discord/exports/#user","text":"To come...","title":"user"},{"location":"discord/general/","text":"Introduction The Discord resource is for the most part a helper resource that provides all the exports and events you need to interact with Discord. Currently used for: Gathering information about a user in your server ex. roles Checking if a user is banned Sending log messages Emitting events when a user is updated or banned Features to come: Interacting with a users roles (adding/removing) Sending private messages to a user Updating a messages (for updating logs etc.) The resource uses discord.js and requires a bot to function. discord.js documentation can be found here Config You'll find the config file ( config.discord.json ) in the discord folder, it should look like this: { \"botToken\" : \"\" , \"guildIds\" : \"\" } botToken : This is the token for the Discord bot you wish to use. The token can be found here . guildIds : This is the ID of your discord server, can be found by enabling developer mode on discord and right clicking your server in the server list","title":"General"},{"location":"discord/general/#introduction","text":"The Discord resource is for the most part a helper resource that provides all the exports and events you need to interact with Discord. Currently used for: Gathering information about a user in your server ex. roles Checking if a user is banned Sending log messages Emitting events when a user is updated or banned Features to come: Interacting with a users roles (adding/removing) Sending private messages to a user Updating a messages (for updating logs etc.) The resource uses discord.js and requires a bot to function. discord.js documentation can be found here","title":"Introduction"},{"location":"discord/general/#config","text":"You'll find the config file ( config.discord.json ) in the discord folder, it should look like this: { \"botToken\" : \"\" , \"guildIds\" : \"\" } botToken : This is the token for the Discord bot you wish to use. The token can be found here . guildIds : This is the ID of your discord server, can be found by enabling developer mode on discord and right clicking your server in the server list","title":"Config"}]}